name: Deploy Application

on:
  workflow_dispatch:
  
permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          audience: sts.amazonaws.com
          role-to-assume: arn:aws:iam::891612573605:role/github-oidc
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: us-east-2
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '23'
          cache: 'yarn'
      - name: Install Dependencies
        run: yarn install
      - name: Build
        run: yarn build:prod
      - name: Log Into ECR
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build and Push Docker Image
        run: |
          IMAGE_TAG=${{ github.sha }}
          AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          ECR_REGISTRY=$AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com
          ECR_REPOSITORY=amia/api

          docker build -t $ECR_REPOSITORY:$IMAGE_TAG -f docker/Dockerfile .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.9.8"
      - name: Terraform Init and Plan
        run: |
          cd terraform
          terraform init
          terraform plan -out=tf.plan -detailed-exitcode
      - name: Show Plan Output
        run: |
          cd terraform
          terraform show tf.plan
      - name: Terraform Apply
        run: |
          cd terraform
          terraform apply tf.plan